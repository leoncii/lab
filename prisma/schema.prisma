datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedIndexes", "referentialIntegrity", "fullTextSearch", "fullTextIndex"]
}

model Lab {
  id   Int     @id @default(autoincrement())
  
  name String? @unique
  image String? @default("")
  address String?

  User User[]
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  name      String?
  email     String   @unique
  ci        String?  @default("")
  password  String?  @db.VarChar(255)
  phone     Int?
  role      Role     @default(RECEPTIONIST)

  labId     String?
  lab       Lab?     @relation(fields: [labId], references: [name], onUpdate: NoAction, onDelete: SetNull)
  orders    Order[]
}

model Order {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  fullName    String    @db.VarChar(70)
  ci          String    @unique
  nit         Int
  birth       DateTime
  phone       Int
  reason      String
  sex         String
  doctor      String
  authorEmail String?
  author      User?     @relation(fields: [authorEmail], references: [email], onDelete: SetNull, onUpdate: NoAction)
  receipts     Receipts[]
}

model Receipts {
  cuiid      String   @id @default(cuid())
  id         Int      @default(autoincrement())
  json       Json     @db.Json
  createdAt  DateTime @default(now())
  saldo      Int
  itotal     Int      @default(0)
  total      Int
  updatedAt  DateTime @updatedAt
  labName    String?
  ownerCi    String?
  indebtList Json[]
  owner      Order?   @relation(fields: [ownerCi], references: [ci], onUpdate: NoAction, onDelete: NoAction)

  @@index([labName, ownerCi], map: "receipt_lab_owner")
}

enum Role {
  ADMIN
  BIOCHEMICAL
  RECEPTIONIST
}
