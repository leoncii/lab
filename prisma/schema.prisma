datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedIndexes","referentialIntegrity"]
}

model Lab {
  id      Int      @id @default(autoincrement())
  name    String?  @unique
  receipt Receipt[]
  User    User[]
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  role      Role     @default(RECEPTIONIST)
  email     String   @unique
  name      String?
  password  String?  @db.VarChar(255)
  labId     String
  lab       Lab      @relation(fields: [labId], references: [name], onDelete: Cascade)
  orders    Order[]
}

model Order {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  fullName    String    @db.VarChar(35)
  ci          Int       @unique
  nit         Int
  birth       DateTime
  phone       Int
  reason      String
  sex         String
  doctor      String
  authorEmail String?
  author      User?     @relation(fields: [authorEmail], references: [email], onDelete: Cascade)
  receipt     Receipt[]
}

model Receipt {
  cuiid      String   @unique @default(cuid())
  id         Int      @default(autoincrement())
  json       Json     @db.Json
  createdAt  DateTime @default(now())
  saldo      Int
  itotal     Int      @default(0)
  total      Int
  updatedAt  DateTime @updatedAt
  labName    String
  ownerCi    Int
  indebtList Json[]
  lab        Lab      @relation(fields: [labName], references: [name], onDelete: Cascade)
  owner      Order    @relation(fields: [ownerCi], references: [ci], onDelete: Cascade)

  @@id([id, labName, ownerCi], name: "receipt_id")
  @@index([labName, ownerCi], map: "receipt_lab_owner")
}

enum Role {
  ADMIN
  BIOCHEMICAL
  RECEPTIONIST
}
